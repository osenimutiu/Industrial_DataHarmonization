@model SCBHarmonization.Models.RegisterViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Register</title>

    <link href="~/Content/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
          rel="stylesheet">
    <link href="~/Content/css/sb-admin-2.min.css" rel="stylesheet">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>

    <link href="~/Content/css/sb-admin-2.min.css" rel="stylesheet">
    <script src="~/CheckPasswordStrength.js"></script>
    <link href="~/CheckPasswordStrength.css" rel="stylesheet" />

</head>

<body class="bg-gradient-primary">

    @*<div class="container" style="margin-top:15em">

            <div class="card o-hidden border-0 shadow-lg my-5">
                <div class="card-body p-0">
                    <div class="row">
                        <div class="col-lg-5 d-none d-lg-block">
                            <img src="~/Content/img/unnamed.jpg" style="width: 500px; height: 350px; margin-top: 100px;" />
                        </div>
                        <div class="col-lg-7">
                            <div class="p-5">
                                <div class="text-center">
                                    <h1 class="h4 text-gray-900 mb-4">User Profiling</h1>
                                </div>
                                <div class="user">
                                    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary("", new { @class = "text-danger" })

                                        <div class="form-group row">
                                            <div class="col-sm-6 mb-3 mb-sm-0">

                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.StaffName, new { id= "txtStaffName", @class = "form-control form-control-user", @placeholder = "Staff Name" })

                                        </div>
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Email, new { id= "txtEmail", @class = "form-control form-control-user", @placeholder = "Email" })

                                        </div>
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.UserName, new { id= "txtUserName", @class = "form-control form-control-user", @placeholder = "PSID" })

                                        </div>
                                        <div class="form-group">
                                            @Html.Label("Role", new { @class = "col-md-2 control-label" })
                                            <div class="col-md-10">
                                                @Html.DropDownList("UserRoles", (SelectList)ViewBag.Name, new { id= "ddUserRoles", @class = "form-control form-control-user", @placeholder = "Select Role", @style = "width: 520px" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <input id="test" type="checkbox" />&#160;&#160;&#160;Authogenerate Password
                                        </div>
                                        <div id="txtAutogenerate">
                                            <div class="form-group">

                                                @Html.PasswordFor(m => m.Password, new { @id = "txtPassword", @class = "form-control form-control-user hint", @placeholder = "Password" })
                                            </div>
                                            <div class="form-group">
                                                <div id="strengthMessage"></div>
                                            </div>
                                            <div class="form-group">
                                                @Html.PasswordFor(m => m.ConfirmPassword, new { id= "txtConfirmPassword", @class = "form-control form-control-user", @placeholder = "Repeat Password" })
                                            </div>
                                        </div>



                                         <button type="button" id="btnReset" class="btn btn-danger btn-user btn-block" onclick="registerUser()">Register</button>



                                    }
                                </div>
                                <br />
                                @Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })
                                <br />
                                <br />
                                <div class="text-center text-warning" id="uppercase">
                                    Hint: Use minimum of 12 characters with at least a special character, lowercase, uppercase or numbers
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>*@

    <div class="container" style="margin-top:15em">

        <div class="card o-hidden border-0 shadow-lg my-5">
            <div class="card-body p-0">
                <!-- Nested Row within Card Body -->
                <div class="row">
                    <div class="col-lg-5 d-none d-lg-block">
                        <img src="~/Content/img/unnamed.jpg" style="width: 500px; height: 350px; margin-top: 100px;" />
                    </div>
                    <div class="col-lg-7">
                        <div class="p-5">
                            <div class="text-center">
                                <h1 class="h4 text-gray-900 mb-4">User Profiling</h1>
                            </div>
                            <div class="user">
                                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary("", new { @class = "text-danger" })

                                    <div class="form-group row">
                                        <div class="col-sm-6 mb-3 mb-sm-0">

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(m => m.StaffName, new { id = "txtStaffName", @class = "form-control form-control-user", @placeholder = "Staff Name" })

                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(m => m.Email, new { id = "txtEmail", @class = "form-control form-control-user", @placeholder = "Email" })

                                    </div>
                                    <div class="form-group">
                                        @Html.TextBoxFor(m => m.UserName, new { id = "txtUserName", @class = "form-control form-control-user", @placeholder = "PSID" })

                                    </div>
                                    <div class="form-group">
                                        @*@Html.Label("User Group", new { @class = "col-md-2 control-label" })*@
                                        <label>User Group</label>
                                        <div class="col-md-10">
                                            <select class="form-control form-control-user" style="width: 520px">
                                                <option value="System Admin">System Admin</option>
                                                <option value="User">User</option>
                                            </select>
                                        </div>

                                    </div>

                                    <div class="form-group">
                                        @Html.Label("UserRoles", new { @class = "col-md-6 control-label" })
                                        <div class="col-md-10">
                                            @*@Html.DropDownList("Name")*@
                                            @Html.DropDownList("UserRoles", (SelectList)ViewBag.Name, new { id = "ddUserRoles", @class = "form-control form-control-user", @placeholder = "Select Role", @style = "width: 520px" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <input id="test" type="checkbox" />&#160;&#160;&#160;Authogenerate Password
                                    </div>
                                    <div id="txtAutogenerate">
                                        <div class="form-group">

                                            @Html.PasswordFor(m => m.Password, new { @id = "txtPassword", @class = "form-control form-control-user hint", @placeholder = "Password" })
                                        </div>
                                        <div class="form-group">
                                            <div id="strengthMessage"></div>
                                        </div>
                                        <div class="form-group">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { id = "txtConfirmPassword", @class = "form-control form-control-user", @placeholder = "Repeat Password" })
                                        </div>
                                    </div>



                                    @*<input type="submit" id="btnReset" class="btn btn-danger btn-user btn-block" value="Register" />*@
                                    <button type="button" id="btnReset" class="btn btn-danger btn-user btn-block" onclick="registerUser()">Register</button>



                                }
                            </div>
                            <br />
                            @Html.ActionLink("Back to previous page", null, null, null, new { href = Request.UrlReferrer })
                            <br />
                            <br />
                            <div class="text-center text-warning" id="uppercase">
                                Hint: Use minimum of 12 characters with at least a special character, lowercase, uppercase or numbers
                            </div>
                            @*<div class="text-center">
                                    <a class="small" href="~/Account/ForgotPassword">Forgot Password?</a>
                                </div>
                                <div class="text-center">
                                    <a class="small" href="~/Account/Login">Already have an account? Login!</a>
                                </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>


    <script src="~/Content/vendor/jquery/jquery.min.js"></script>
    <script src="~/Content/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/Content/vendor/jquery-easing/jquery.easing.min.js"></script>
    <script src="~/Content/js/sb-admin-2.min.js"></script>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("input[type='checkbox']").change(function () {
                GetCheckBoxValue();
            });
        });

        function GetCheckBoxValue() {
            if ($("#test").prop("checked")) {
                //alert('1');
                var clear = $("#txtPassword").val('')
                $("#txtAutogenerate").hide();
                $("#btnReset").removeAttr("disabled");
            }
            else {
                //alert('2');
                $("#txtAutogenerate").show();
                $("#btnReset").attr("disabled", "disabled");

            }

        }
        function reset() {
            $("#txtStaffName").val('');
            $("#txtEmail").val('');
            $("#txtUserName").val('');
            $("#ddUserRoles").val('');
            $("#txtPassword").val('');
            $("#txtConfirmPassword").val('');
        }
        function registerUser() {
            debugger;
            var model = {};
            model.StaffName = $("#txtStaffName").val();
            model.Email = $("#txtEmail").val();
            model.UserName = $("#txtUserName").val();
            model.UserRoles = $("#ddUserRoles").val();
            model.Password = $("#txtPassword").val();
            model.ConfirmPassword = $("#txtConfirmPassword").val();
            if (model.Password != model.ConfirmPassword) {
                alert('Password Mismatch');
                return false;
            }
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(model),
                url: '/Account/Register',
                success: function (data) {
                    alert(data);
                    reset();
                },
                error: function () {
                    alert('There is some problem to adding the data');
                }
            });
            //     var att = new Object();
            //att.TransId = $("#txtTransId").val();
            //var data = JSON.stringify({
            //    transId: att
            //});
            //return $.ajax({
            //    contentType: 'application/json; charset=utf-8',
            //    dataType: 'json',
            //    type: 'POST',
            //    url: "/NIBBSPortal/CheckExisting",
            //    data: data,
            //    success: function (result) {
            //        alert(result);
            //    },
            //    error: function () {
            //        alert("Error!")
            //    }
            //});
        }

            //function checkExisting() {
            //    var att = new Object();
            //    att.TransId = $("#txtTransId").val();
            //    var data = JSON.stringify({
            //        transId: att
            //    });
            //    return $.ajax({
            //        contentType: 'application/json; charset=utf-8',
            //        dataType: 'json',
            //        type: 'POST',
            //        url: "/NIBBSPortal/CheckExisting",
            //        data: data,
            //        success: function (result) {
            //            alert(result);
            //        },
            //        error: function () {
            //            alert("Error!")
            //        }
            //    });
            //}

            //function checkExistingList() {
            //    var att = new Object();
            //    att.TransId = $("#txtTransId").val();
            //    var data = JSON.stringify({
            //        transId: att
            //    });
            //    return $.ajax({
            //        contentType: 'application/json; charset=utf-8',
            //        dataType: 'json',
            //        type: 'POST',
            //        url: "/NIBBSPortal/CheckExistingList",
            //        data: data,
            //        success: function (result) {
            //            alert(result);
            //        },
            //        error: function () {
            //            alert("Error!")
            //        }
            //    });
            //}

    </script>


</body>

</html>


